grafana:
  enabled: false

loki:
  enabled: false

mimir:
  mimir:
    structuredConfig:
      limits:
        max_global_series_per_user: 10000000
        max_label_names_per_series: 40
        ingestion_rate: 150000
        ingestion_burst_size: 300000
        compactor_blocks_retention_period: 30d
      common:
        storage:
          backend: s3
          s3:
            endpoint: minio.minio.svc.cluster.local
            access_key_id: hU2WB7hZSnLeqP3TU5pm
            secret_access_key: qGFWTgcXmb0peNqLDSDEV4h8FrxQrjwQBRQDLW5q
            http:
              insecure_skip_verify: true
      blocks_storage:
        s3:
          bucket_name: mimir-tsdb
      alertmanager_storage:
        s3:
          bucket_name: mimir-ruler
      ruler_storage:
        s3:
          bucket_name: mimir-ruler
  alertmanager:
    replicas: 2
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  compactor:
    persistentVolume:
      size: 5Gi
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  distributor:
    replicas: 2
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  ingester:
    persistentVolume:
      size: 10Gi
    replicas: 3
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  overrides_exporter:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  ruler:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  querier:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  query_frontend:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  query_scheduler:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  store_gateway:
    persistentVolume:
      size: 2Gi
    replicas: 3
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  minio:
    enabled: false
  nginx:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"

tempo:
  enabled: false