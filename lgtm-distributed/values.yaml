grafana:
  enabled: false

loki:
  enabled: false
  loki:
    image:
      tag: 3.5.3
    structuredConfig:
      limits_config:
        retention_period: 30d
    schemaConfig:
      configs:
      - from: 2020-09-07
        store: tsdb
        object_store: aws
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
    storageConfig:
      tsdb_shipper:
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        cache_ttl: 24h
      aws:
        s3: https://hU2WB7hZSnLeqP3TU5pm:qGFWTgcXmb0peNqLDSDEV4h8FrxQrjwQBRQDLW5q@minio.minio.svc.cluster.local/loki
        s3forcepathstyle: true
        http_config:
          insecure_skip_verify: true
  ingester:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  distributor:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  querier:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  queryFrontend:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  gateway:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 100Mi

mimir:
  mimir:
    structuredConfig:
      limits:
        max_global_series_per_user: 10000000
        max_label_names_per_series: 40
        ingestion_rate: 150000
        ingestion_burst_size: 300000
        compactor_blocks_retention_period: 30d
      common:
        storage:
          backend: s3
          s3:
            endpoint: minio.minio.svc.cluster.local
            access_key_id: hU2WB7hZSnLeqP3TU5pm
            secret_access_key: qGFWTgcXmb0peNqLDSDEV4h8FrxQrjwQBRQDLW5q
            http:
              insecure_skip_verify: true
      blocks_storage:
        s3:
          bucket_name: mimir-tsdb
      alertmanager_storage:
        s3:
          bucket_name: mimir-ruler
      ruler_storage:
        s3:
          bucket_name: mimir-ruler
  alertmanager:
    replicas: 2
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  compactor:
    persistentVolume:
      size: 5Gi
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  distributor:
    replicas: 2
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  ingester:
    persistentVolume:
      size: 10Gi
    replicas: 3
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  overrides_exporter:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  ruler:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  querier:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  query_frontend:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  query_scheduler:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  store_gateway:
    persistentVolume:
      size: 2Gi
    replicas: 3
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  minio:
    enabled: false
  nginx:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"

tempo:
  ingester:
    replicas: 1
    config:
      replication_factor: 1
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  metricsGenerator:
    enabled: true
    config:
      storage:
        remote_write:
        - url: http://{{ .Release.Name  }}-mimir-nginx/api/v1/push
          send_exemplars: true
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  compactor:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  distributor:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  querier:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  queryFrontend:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  memcached:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  storage:
    trace:
      backend: s3
      s3:
        bucket: tempo
        prefix: traces
        endpoint: minio.minio.svc.cluster.local
        tls_insecure_skip_verify: true
        forcepathstyle: true
        access_key: hU2WB7hZSnLeqP3TU5pm
        secret_key: qGFWTgcXmb0peNqLDSDEV4h8FrxQrjwQBRQDLW5q
  traces:
    otlp:
      grpc:
        enabled: true
      http:
        enabled: true
  global_overrides:
    defaults:
      metrics_generator:
        processors:
        - service-graphs
        - span-metrics
