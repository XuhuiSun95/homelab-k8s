grafana:
  service:
    ipFamilyPolicy: "PreferDualStack"
    ipFamilies: ["IPv6","IPv4"]
  podLabels:
    istio.io/dataplane-mode: ambient
  resources:
    requests:
      cpu: 109m
      memory: 235Mi
    limits:
      memory: 235Mi
  defaultDashboardsTimezone: America/Los_Angeles
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      7639-istio-mesh-dashboard:
        # renovate: depName="Istio Mesh Dashboard"
        gnetId: 7639
        revision: 260
        datasource: Mimir
      7636-istio-service-dashboard:
        # renovate: depName="Istio Service Dashboard"
        gnetId: 7636
        revision: 259
        datasource: Mimir
      7630-istio-workload-dashboard:
        # renovate: depName="Istio Workload Dashboard"
        gnetId: 7630
        revision: 259
        datasource: Mimir
      11829-istio-performance-dashboard:
        # renovate: depName="Istio Performance Dashboard"
        gnetId: 11829
        revision: 260
        datasource: Mimir
      7645-istio-control-plane-dashboard:
        # renovate: depName="Istio Control Plane Dashboard"
        gnetId: 7645
        revision: 260
        datasource: Mimir
      13277-istio-wasm-extension-dashboard:
        # renovate: depName="Istio Wasm Extension Dashboard"
        gnetId: 13277
        revision: 216
        datasource: Mimir
      13502-minio-dashboard:
        # renovate: depName="MinIO Dashboard"
        gnetId: 13502
        revision: 26
        datasource:
        - name: DS_PROMETHEUS
          value: Mimir
      19237-minio-bucket-dashboard:
        # renovate: depName="MinIO Bucket Dashboard"
        gnetId: 19237
        revision: 2
        datasource:
        - name: DS_PROMETHEUS
          value: Mimir
  grafana.ini:
    server:
      root_url: https://grafana.local-v2.xuhuisun.com
    auth.generic_oauth:
      enabled: true
      name: Keycloak
      allow_sign_up: true
      client_id: grafana
      scopes: "openid email profile offline_access roles"
      email_attribute_path: email
      login_attribute_path: username
      name_attribute_path: full_name
      auth_url: "https://iam.local-v2.xuhuisun.com/realms/local-v2/protocol/openid-connect/auth"
      token_url: "https://iam.local-v2.xuhuisun.com/realms/local-v2/protocol/openid-connect/token"
      api_url: "https://iam.local-v2.xuhuisun.com/realms/local-v2/protocol/openid-connect/userinfo"
      role_attribute_path: "contains(resource_access.grafana.roles[*], 'grafanaadmin') && 'GrafanaAdmin' || contains(resource_access.grafana.roles[*], 'admin') && 'Admin' || contains(resource_access.grafana.roles[*], 'editor') && 'Editor' || 'Viewer'"
      groups_attribute_path: groups
      signout_redirect_url: "https://iam.local-v2.xuhuisun.com/realms/local-v2/protocol/openid-connect/logout?post_logout_redirect_uri=https%3A%2F%2Fgrafana.local-v2.xuhuisun.com%2Flogin"
      allow_assign_grafana_admin: true
      use_pkce: true
      use_refresh_token: true
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
      searchNamespace: ALL
      enableNewTablePanelSyntax: false
      multicluster:
        global:
          enabled: true
      provider:
        allowUiUpdates: false
    resources:
      requests:
        cpu: 56m
        memory: 100Mi
      limits:
        memory: 100Mi

loki:
  loki:
    structuredConfig:
      limits_config:
        retention_period: 30d
    schemaConfig:
      configs:
      - from: 2020-09-07
        store: tsdb
        object_store: aws
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
    storageConfig:
      tsdb_shipper:
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        cache_ttl: 24h
      aws:
        s3: https://hU2WB7hZSnLeqP3TU5pm:qGFWTgcXmb0peNqLDSDEV4h8FrxQrjwQBRQDLW5q@minio.minio.svc.cluster.local/loki
        s3forcepathstyle: true
        http_config:
          insecure_skip_verify: true
  ingester:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  distributor:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  querier:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  queryFrontend:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  gateway:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 100Mi

mimir:
  mimir:
    structuredConfig:
      limits:
        max_global_series_per_user: 10000000
        max_label_names_per_series: 40
        ingestion_rate: 150000
        ingestion_burst_size: 300000
        compactor_blocks_retention_period: 30d
      common:
        storage:
          backend: s3
          s3:
            endpoint: minio.minio.svc.cluster.local
            access_key_id: hU2WB7hZSnLeqP3TU5pm
            secret_access_key: qGFWTgcXmb0peNqLDSDEV4h8FrxQrjwQBRQDLW5q
            http:
              insecure_skip_verify: true
      blocks_storage:
        s3:
          bucket_name: mimir-tsdb
      alertmanager_storage:
        s3:
          bucket_name: mimir-ruler
      ruler_storage:
        s3:
          bucket_name: mimir-ruler
  alertmanager:
    replicas: 2
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  compactor:
    persistentVolume:
      size: 10Gi
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  distributor:
    replicas: 2
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  ingester:
    persistentVolume:
      size: 25Gi
    replicas: 3
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  overrides_exporter:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  ruler:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  querier:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  query_frontend:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  query_scheduler:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  store_gateway:
    persistentVolume:
      size: 5Gi
    replicas: 3
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  minio:
    enabled: false
  nginx:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"

tempo:
  ingester:
    replicas: 1
    config:
      replication_factor: 1
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  metricsGenerator:
    enabled: true
    config:
      storage:
        remote_write:
        - url: http://{{ .Release.Name  }}-mimir-nginx/api/v1/push
          send_exemplars: true
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  compactor:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  distributor:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  querier:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  queryFrontend:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  memcached:
    nodeSelector:
      node-role.kubernetes.io/system: ""
    tolerations:
      - key: "node-role.kubernetes.io/system"
        operator: "Exists"
        effect: "NoSchedule"
  storage:
    trace:
      backend: s3
      s3:
        bucket: tempo
        prefix: traces
        endpoint: minio.minio.svc.cluster.local
        tls_insecure_skip_verify: true
        forcepathstyle: true
        access_key: hU2WB7hZSnLeqP3TU5pm
        secret_key: qGFWTgcXmb0peNqLDSDEV4h8FrxQrjwQBRQDLW5q
  traces:
    otlp:
      grpc:
        enabled: true
      http:
        enabled: true
  global_overrides:
    defaults:
      metrics_generator:
        processors:
        - service-graphs
        - span-metrics
