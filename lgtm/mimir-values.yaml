mimir:
  structuredConfig:
    limits:
      max_global_series_per_user: 10000000
      max_label_names_per_series: 40
      ingestion_rate: 150000
      ingestion_burst_size: 300000
      compactor_blocks_retention_period: 30d
    common:
      storage:
        backend: s3
        s3:
          endpoint: minio.minio.svc.cluster.local
          access_key_id: X3EEh4lU0Uz9M44FWebq
          secret_access_key: VcqVSaBjrsZhHm8qThNBuzjirzkI3EPB4tQwD5ad
          http:
            insecure_skip_verify: true
    blocks_storage:
      s3:
        bucket_name: mimir-tsdb
    alertmanager_storage:
      s3:
        bucket_name: mimir-ruler
    ruler_storage:
      s3:
        bucket_name: mimir-ruler
alertmanager:
  persistentVolume:
    size: 1Gi
    storageClass: proxmox-local-zfs-xfs
  replicas: 2
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key:  karpenter.sh/nodepool
              operator: In
              values: ["system"]
  tolerations:
    - key: node-role.kubernetes.io/system
      operator: Exists
      effect: NoSchedule
  priorityClassName: platform-critical
compactor:
  persistentVolume:
    size: 5Gi
    storageClass: proxmox-local-zfs-xfs
distributor:
  replicas: 2
ingester:
  persistentVolume:
    size: 10Gi
    storageClass: proxmox-local-zfs-xfs
  replicas: 3
  zoneAwareReplication:
     enabled: false
chunks-cache:
  enabled: true
  replicas: 1
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key:  karpenter.sh/nodepool
              operator: In
              values: ["system"]
  tolerations:
    - key: node-role.kubernetes.io/system
      operator: Exists
      effect: NoSchedule
  priorityClassName: platform-critical
index-cache:
  enabled: true
  replicas: 1
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key:  karpenter.sh/nodepool
              operator: In
              values: ["system"]
  tolerations:
    - key: node-role.kubernetes.io/system
      operator: Exists
      effect: NoSchedule
  priorityClassName: platform-critical
metadata-cache:
  enabled: true
  replicas: 1
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key:  karpenter.sh/nodepool
              operator: In
              values: ["system"]
  tolerations:
    - key: node-role.kubernetes.io/system
      operator: Exists
      effect: NoSchedule
  priorityClassName: platform-critical
results-cache:
  enabled: true
  replicas: 1
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key:  karpenter.sh/nodepool
              operator: In
              values: ["system"]
  tolerations:
    - key: node-role.kubernetes.io/system
      operator: Exists
      effect: NoSchedule
  priorityClassName: platform-critical
minio:
  enabled: false
overrides_exporter:
  replicas: 1
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key:  karpenter.sh/nodepool
              operator: In
              values: ["system"]
  tolerations:
    - key: node-role.kubernetes.io/system
      operator: Exists
      effect: NoSchedule
  priorityClassName: platform-critical
querier:
  replicas: 1
query_frontend:
  replicas: 1
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key:  karpenter.sh/nodepool
              operator: In
              values: ["system"]
  tolerations:
    - key: node-role.kubernetes.io/system
      operator: Exists
      effect: NoSchedule
  priorityClassName: platform-critical
query_scheduler:
  replicas: 1
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key:  karpenter.sh/nodepool
              operator: In
              values: ["system"]
  tolerations:
    - key: node-role.kubernetes.io/system
      operator: Exists
      effect: NoSchedule
  priorityClassName: platform-critical
ruler:
  replicas: 1
store_gateway:
  persistentVolume:
    size: 2Gi
    storageClass: proxmox-local-zfs-xfs
  replicas: 3
  zoneAwareReplication:
     enabled: false
nginx:
  enabled: false
gateway:
  replicas: 1
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key:  karpenter.sh/nodepool
              operator: In
              values: ["system"]
  tolerations:
    - key: node-role.kubernetes.io/system
      operator: Exists
      effect: NoSchedule
  priorityClassName: platform-critical