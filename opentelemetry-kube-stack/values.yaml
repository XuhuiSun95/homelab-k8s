crds:
  installPrometheus: false

opentelemetry-operator:
  priorityClassName: platform-critical
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key:  karpenter.sh/nodepool
              operator: In
              values: ["system"]
  tolerations:
    - key: node-role.kubernetes.io/system
      operator: Exists
      effect: NoSchedule

defaultCRConfig:
  priorityClassName: platform-critical
  nodeSelector:
    node.cloudprovider.kubernetes.io/platform: nocloud
  tolerations:
    - operator: Exists

collectors:
  daemon:
    scrape_configs_file: ""
    presets:
      logsCollection:
        enabled: false
      kubeletMetrics:
        enabled: false 
      hostMetrics:
        enabled: false
      kubernetesAttributes:
        enabled: false 
      kubernetesEvents:
        enabled: false
      clusterMetrics:
        enabled: false
    config:
      exporters:
        otlp/tempo:
          endpoint: lgtm-tempo-gateway.monitoring.svc.cluster.local:4317
          tls:
            insecure: true
        otlphttp/mimir:
          endpoint: http://lgtm-mimir-nginx.monitoring.svc.cluster.local/otlp
          headers:
            X-Scope-OrgID: homelab-k8s
          tls:
            insecure: true
        otlphttp/loki:
          endpoint: http://lgtm-loki-gateway.monitoring.svc/otlp
          headers:
            X-Scope-OrgID: homelab-k8s
          tls:
            insecure: true
      service:
        pipelines:
          traces:
            exporters:
              - otlp/tempo
          metrics:
            exporters:
              - otlphttp/mimir
          logs:
            exporters:
              - otlphttp/loki