crds:
  installPrometheus: false

opentelemetry-operator:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: "node-role.kubernetes.io/system"
                operator: "Exists"
  tolerations:
    - key: "node-role.kubernetes.io/system"
      operator: "Exists"
      effect: "NoSchedule"

defaultCRConfig:
  tolerations:
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/system"
      operator: "Exists"
      effect: "NoSchedule"

collectors:
  daemon:
    scrape_configs_file: ""
    presets:
      logsCollection:
        enabled: false
      kubeletMetrics:
        enabled: false 
      hostMetrics:
        enabled: false
      kubernetesAttributes:
        enabled: false 
      kubernetesEvents:
        enabled: false
      clusterMetrics:
        enabled: false
    config:
      exporters:
        otlp/tempo:
          endpoint: lgtm-tempo-gateway.monitoring.svc.cluster.local:4317
          tls:
            insecure: true
        otlphttp/mimir:
          endpoint: http://lgtm-distributed-mimir-nginx.monitoring.svc.cluster.local/otlp
          headers:
            X-Scope-OrgID: "homelab-v2"
          tls:
            insecure: true
        otlphttp/loki:
          endpoint: http://lgtm-loki-gateway.monitoring.svc/otlp
          headers:
            X-Scope-OrgID: "homelab-v2"
          tls:
            insecure: true
      service:
        pipelines:
          traces:
            exporters:
              - otlp/tempo
          metrics:
            exporters:
              - otlphttp/mimir
          logs:
            exporters:
              - otlphttp/loki
