alertmanager:
  enabled: false

grafana:
  enabled: false
  forceDeployDashboards: true

kubelet:
  serviceMonitor:
    relabelings:
      - action: replace
        sourceLabels: [__metrics_path__]
        targetLabel: metrics_path
      - sourceLabels: [__meta_kubernetes_endpoint_node_name]
        targetLabel: instance
        action: replace

kubeControllerManager:
  service:
    port: 2381
    targetPort: 2381
    ipDualStack:
      enabled: true
  serviceMonitor:
    relabelings:
      - sourceLabels: [__meta_kubernetes_pod_node_name]
        targetLabel: instance
        action: replace

coreDns:
  service:
    ipDualStack:
      enabled: true
  serviceMonitor:
    relabelings:
      - sourceLabels: [__meta_kubernetes_pod_node_name]
        targetLabel: instance
        action: replace

kubeEtcd:
  service:
    selector:
      k8s-app: kube-controller-manager
    ipDualStack:
      enabled: true
  serviceMonitor:
    relabelings:
      - sourceLabels: [__meta_kubernetes_pod_node_name]
        targetLabel: instance
        action: replace

kubeScheduler:
  service:
    ipDualStack:
      enabled: true
  serviceMonitor:
    relabelings:
      - sourceLabels: [__meta_kubernetes_pod_node_name]
        targetLabel: instance
        action: replace

kubeProxy:
  enabled: false

kube-state-metrics:
  service:
    ipDualStack:
      enabled: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: karpenter.sh/nodepool
              operator: In
              values: ["system"]
  tolerations:
    - key: node-role.kubernetes.io/system
      operator: Exists
      effect: NoSchedule
  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi
  priorityClassName: platform-critical

prometheus-node-exporter:
  service:
    ipDualStack:
      enabled: true
  prometheus:
    monitor:
      relabelings:
        - sourceLabels: [__meta_kubernetes_pod_node_name]
          targetLabel: instance
          action: replace
  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi
  priorityClassName: platform-critical

prometheusOperator:
  service:
    ipDualStack:
      enabled: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: karpenter.sh/nodepool
              operator: In
              values: ["system"]
  tolerations:
    - key: node-role.kubernetes.io/system
      operator: Exists
      effect: NoSchedule
  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi
  priorityClassName: platform-critical
  prometheusConfigReloader:
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 100Mi

prometheus:
  enabled: true
  service:
    ipDualStack:
      enabled: true
  prometheusSpec:
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    retention: 1h
    remoteWrite:
      - url:  http://lgtm-mimir-nginx/api/v1/push
        headers:
          X-Scope-OrgID: homelab-k8s
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
              - key: karpenter.sh/nodepool
                operator: In
                values: ["system"]
    tolerations:
      - key: node-role.kubernetes.io/system
        operator: Exists
        effect: NoSchedule
    resources:
      requests:
        cpu: 293m
        memory: 2640Mi
      limits:
        memory: 2640Mi
    priorityClassName: platform-critical