alertmanager:
  service:
    ipDualStack:
      enabled: true
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: "node-role.kubernetes.io/system"
                  operator: "Exists"
    tolerations:
    - key: "node-role.kubernetes.io/system"
      operator: "Exists"
      effect: "NoSchedule"
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 100Mi

grafana:
  service:
    ipFamilyPolicy: "PreferDualStack"
    ipFamilies: ["IPv6","IPv4"]
  podLabels:
    istio.io/dataplane-mode: ambient
  resources:
    requests:
      cpu: 76m
      memory: 128Mi
    limits:
      memory: 128Mi
  defaultDashboardsTimezone: America/Los_Angeles
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      7639-istio-mesh-dashboard:
        # renovate: depName="Istio Mesh Dashboard"
        gnetId: 7639
        revision: 255
        datasource: Prometheus
      7636-istio-service-dashboard:
        # renovate: depName="Istio Service Dashboard"
        gnetId: 7636
        revision: 254
        datasource: Prometheus
      7630-istio-workload-dashboard:
        # renovate: depName="Istio Workload Dashboard"
        gnetId: 7630
        revision: 255
        datasource: Prometheus
      11829-istio-performance-dashboard:
        # renovate: depName="Istio Performance Dashboard"
        gnetId: 11829
        revision: 255
        datasource: Prometheus
      7645-istio-control-plane-dashboard:
        # renovate: depName="Istio Control Plane Dashboard"
        gnetId: 7645
        revision: 255
        datasource: Prometheus
      13277-istio-wasm-extension-dashboard:
        # renovate: depName="Istio Wasm Extension Dashboard"
        gnetId: 13277
        revision: 211
        datasource: Prometheus
      13502-minio-dashboard:
        # renovate: depName="MinIO Dashboard"
        gnetId: 13502
        revision: 26
        datasource:
        - name: DS_PROMETHEUS
          value: Prometheus
      19237-minio-bucket-dashboard:
        # renovate: depName="MinIO Bucket Dashboard"
        gnetId: 19237
        revision: 2
        datasource:
        - name: DS_PROMETHEUS
          value: Prometheus
  grafana.ini:
    server:
      root_url: https://grafana.local-v2.xuhuisun.com
    auth.generic_oauth:
      enabled: true
      name: Keycloak
      allow_sign_up: true
      client_id: grafana
      scopes: "openid email profile offline_access roles"
      email_attribute_path: email
      login_attribute_path: username
      name_attribute_path: full_name
      auth_url: "https://iam.local-v2.xuhuisun.com/realms/grafana/protocol/openid-connect/auth"
      token_url: "https://iam.local-v2.xuhuisun.com/realms/grafana/protocol/openid-connect/token"
      api_url: "https://iam.local-v2.xuhuisun.com/realms/grafana/protocol/openid-connect/userinfo"
      role_attribute_path: "contains(resource_access.grafana.roles[*], 'grafanaadmin') && 'GrafanaAdmin' || contains(resource_access.grafana.roles[*], 'admin') && 'Admin' || contains(resource_access.grafana.roles[*], 'editor') && 'Editor' || 'Viewer'"
      groups_attribute_path: groups
      signout_redirect_url: "https://iam.local-v2.xuhuisun.com/realms/grafana/protocol/openid-connect/logout?post_logout_redirect_uri=https%3A%2F%2Fgrafana.local-v2.xuhuisun.com%2Flogin"
      allow_assign_grafana_admin: true
      use_pkce: true
      use_refresh_token: true
  sidecar:
    dashboards:
      multicluster:
        global:
          enabled: true
    resources:
      requests:
        cpu: 10m
        memory: 118Mi
      limits:
        memory: 118Mi

kubeControllerManager:
  service:
    ipDualStack:
      enabled: true

coreDns:
  service:
    ipDualStack:
      enabled: true

kubeEtcd:
  service:
    ipDualStack:
      enabled: true

kubeScheduler:
  service:
    ipDualStack:
      enabled: true

kubeProxy:
  enabled: false

kube-state-metrics:
  service:
    ipDualStack:
      enabled: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: "node-role.kubernetes.io/system"
                operator: "Exists"
  tolerations:
  - key: "node-role.kubernetes.io/system"
    operator: "Exists"
    effect: "NoSchedule"
  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi

prometheus-node-exporter:
  service:
    ipDualStack:
      enabled: true
  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi

prometheusOperator:
  service:
    ipDualStack:
      enabled: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: "node-role.kubernetes.io/system"
                operator: "Exists"
  tolerations:
  - key: "node-role.kubernetes.io/system"
    operator: "Exists"
    effect: "NoSchedule"
  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      memory: 100Mi
  prometheusConfigReloader:
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 100Mi

prometheus:
  service:
    ipDualStack:
      enabled: true
  prometheusSpec:
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    disableCompaction: true
    retention: 6h
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: "node-role.kubernetes.io/system"
                  operator: "Exists"
    tolerations:
    - key: "node-role.kubernetes.io/system"
      operator: "Exists"
      effect: "NoSchedule"
    resources:
      requests:
        cpu: 352m
        memory: 2365Mi
      limits:
        memory: 2365Mi
