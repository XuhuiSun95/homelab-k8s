alertmanager:
  alertmanagerSpec:
    replicas: 3
    podAntiAffinity: hard
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: disktype
              operator: In
              values:
              - ssd
    tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Equal"
        value: ""
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Equal"
        value: ""
        effect: "NoSchedule"
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: local-device-prometheus
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 80Gi

kubeEtcd:
  service:
    enabled: false

grafana:
  podLabels:
    sidecar.istio.io/inject: "true"
  defaultDashboardsTimezone: America/Los_Angeles
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      7639-istio-mesh-dashboard:
        # renovate: depName="Istio Mesh Dashboard"
        gnetId: 7639
        revision: 227
        datasource: Prometheus
      7636-istio-service-dashboard:
        # renovate: depName="Istio Service Dashboard"
        gnetId: 7636
        revision: 227
        datasource: Prometheus
      7630-istio-workload-dashboard:
        # renovate: depName="Istio Workload Dashboard"
        gnetId: 7630
        revision: 227
        datasource: Prometheus
      11829-istio-performance-dashboard:
        # renovate: depName="Istio Performance Dashboard"
        gnetId: 11829
        revision: 227
        datasource: Prometheus
      7645-istio-control-plane-dashboard:
        # renovate: depName="Istio Control Plane Dashboard"
        gnetId: 7645
        revision: 226
        datasource: Prometheus
      13277-istio-wasm-extension-dashboard:
        # renovate: depName="Istio Wasm Extension Dashboard"
        gnetId: 13277
        revision: 184
        datasource: Prometheus
      13502-minio-dashboard:
        # renovate: depName="MinIO Dashboard"
        gnetId: 13502
        revision: 26
        datasource:
        - name: DS_PROMETHEUS
          value: Prometheus
      19237-minio-bucket-dashboard:
        # renovate: depName="MinIO Bucket Dashboard"
        gnetId: 19237
        revision: 2
        datasource:
        - name: DS_PROMETHEUS
          value: Prometheus
  grafana.ini:
    server:
      root_url: https://grafana.local.xuhuisun.com
    auth.generic_oauth:
      enabled: true
      name: Keycloak
      allow_sign_up: true
      client_id: grafana
      client_secret: "$__file{/etc/secrets/auth_generic_oauth/client_secret}"
      scopes: "openid email profile offline_access roles"
      email_attribute_path: email
      login_attribute_path: username
      name_attribute_path: full_name
      auth_url: https://iam.local.xuhuisun.com/realms/grafana/protocol/openid-connect/auth
      token_url: https://iam.local.xuhuisun.com/realms/grafana/protocol/openid-connect/token
      api_url: https://iam.local.xuhuisun.com/realms/grafana/protocol/openid-connect/userinfo
      role_attribute_path: "contains(resource_access.grafana.roles[*], 'grafanaadmin') && 'GrafanaAdmin' || contains(resource_access.grafana.roles[*], 'admin') && 'Admin' || contains(resource_access.grafana.roles[*], 'editor') && 'Editor' || 'Viewer'"
      allow_assign_grafana_admin: true
  extraSecretMounts:
    - name: auth-generic-oauth-secret-mount
      secretName: auth-generic-oauth-secret
      defaultMode: 0440
      mountPath: /etc/secrets/auth_generic_oauth
      readOnly: true

prometheus:
  prometheusSpec:
    replicas: 3
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podAntiAffinity: hard
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: disktype
              operator: In
              values:
              - ssd
    tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Equal"
        value: ""
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Equal"
        value: ""
        effect: "NoSchedule"
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: local-device-prometheus
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 80Gi
